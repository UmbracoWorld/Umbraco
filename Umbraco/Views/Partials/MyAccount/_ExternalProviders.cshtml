@using Umbraco.Cms.Web.Website.Models
@using Umbraco.Cms.Web.Common.Security
@using Umbraco.Cms.Core.Services
@using Umbraco.Cms.Web.Website.Controllers
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<Umbraco.Features.MyAccount.MyAccount>
@inject MemberModelBuilderFactory MemberModelBuilderFactory;
@inject IMemberExternalLoginProviders MemberExternalLoginProviders
@inject IExternalLoginWithKeyService ExternalLoginWithKeyService
@{
    
    var loginProviders = await MemberExternalLoginProviders.GetMemberProvidersAsync();
    var externalSignInError = ViewData.GetExternalSignInProviderErrors();

    var currentExternalLogin =
        ExternalLoginWithKeyService.GetExternalLogins(Model.Key)
            .ToDictionary(x => x.LoginProvider, x => x.ProviderKey);
}
<h2>External Providers</h2>
<p class="small">These are third party authentication options</p>
@{
    var memberExternalLoginProviderSchemes = loginProviders.ToList();
}
@if (memberExternalLoginProviderSchemes.Any())
{
    if (externalSignInError?.AuthenticationType is null && externalSignInError?.Errors.Any() == true)
    {
        @Html.DisplayFor(x => externalSignInError.Errors)
    }

    @foreach (var login in memberExternalLoginProviderSchemes)
    {
        if (currentExternalLogin.TryGetValue(login.ExternalLoginProvider.AuthenticationType, out var providerKey))
        {
            @using (Html.BeginUmbracoForm<UmbExternalLoginController>(nameof(UmbExternalLoginController.Disassociate)))
            {
                <input type="hidden" name="providerKey" value="@providerKey"/>
                <button class="btn btn-outline-danger" type="submit" name="provider" value="@login.ExternalLoginProvider.AuthenticationType">
                    Un-Link your @login.AuthenticationScheme.DisplayName account
                </button>

                if (externalSignInError?.AuthenticationType == login.ExternalLoginProvider.AuthenticationType)
                {
                    @Html.DisplayFor(x => externalSignInError.Errors)
                }
            }
        }
        else
        {
            @using (Html.BeginUmbracoForm<UmbExternalLoginController>(nameof(UmbExternalLoginController.LinkLogin)))
            {
                <button class="btn btn-outline-success" type="submit" name="provider" value="@login.ExternalLoginProvider.AuthenticationType">
                    Link your @login.AuthenticationScheme.DisplayName account
                </button>

                if (externalSignInError?.AuthenticationType == login.ExternalLoginProvider.AuthenticationType)
                {
                    @Html.DisplayFor(x => externalSignInError.Errors)
                }
            }
        }
    }
}