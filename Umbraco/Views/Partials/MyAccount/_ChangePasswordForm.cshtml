@using Umbraco.Features.MyAccount
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model Umbraco.Features.MyAccount.ChangePassword

@{
    const string methodSignatureName = nameof(MyAccountSurfaceController.HandleChangePassword);
}
<h2>Change your password</h2>
<p class="small">
    It's a good idea to change this reguarly.
</p>


@using (Html.BeginUmbracoForm<MyAccountSurfaceController>(methodSignatureName, new { }, new
{
    novalidate = "true", @class = "needs-validation pt-3 pb-3"
}))

{
    @if (ViewData.ModelState.ContainsKey(methodSignatureName))
    {
        <div class="alert alert-danger">
            @Html.ValidationMessage(methodSignatureName)
        </div>
    }
    
    <div class="form-group col-md-6">
        <label asp-for="@Model.CurrentPassword"></label>
        <input asp-for="@Model.CurrentPassword" class="form-control" required="@(Model.HasLocalLogin)" type="password" disabled="@(!Model.HasLocalLogin)"/>
        <div class="small" exclude-if="@(Model.HasLocalLogin)">You don't have a local login yet.</div>
        <span asp-validation-for="@Model.CurrentPassword" class="form-text text-danger"></span>
    </div>
    <div class="form-group col-md-6">
        <label asp-for="@Model.Password"></label>
        <input asp-for="@Model.Password" class="form-control" aria-describedby="emailHelp" required type="password"/>
        <span asp-validation-for="@Model.Password" class="form-text text-danger"></span>
    </div>

    <div class="form-group col-md-6">
        <label asp-for="@Model.ConfirmPassword"></label>
        <input asp-for="@Model.ConfirmPassword" class="form-control" aria-describedby="emailHelp" required type="password"/>
        <span asp-validation-for="@Model.ConfirmPassword" class="form-text text-danger"></span>
    </div>


    <button type="submit" class="btn btn-success">Change my password</button>
    <div class="small mt-3">Changing your password will log you out and you will need to use your new password to log back in.</div>
}